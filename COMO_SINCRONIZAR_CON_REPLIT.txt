================================================================================================
GU√çA: C√ìMO SINCRONIZAR TU C√ìDIGO LOCAL CON ESTE C√ìDIGO DE REPLIT
================================================================================================
Franco, este archivo te explica paso a paso c√≥mo descargar TODO el c√≥digo de Replit
y sincronizarlo con tu proyecto local en C:\Users\FRANCO\Desktop\OpenDoors SO

================================================================================================
PARTE 1: DESCARGAR TODO EL C√ìDIGO DESDE REPLIT
================================================================================================

### OPCI√ìN A: Descargar ZIP completo (M√ÅS F√ÅCIL) ‚úÖ

1. En Replit, haz clic en los 3 puntos (‚ãÆ) arriba a la izquierda
2. Selecciona "Download as ZIP"
3. Guarda el archivo (ej: open-doors-billing.zip)
4. Descomprime en una carpeta temporal, ej: C:\Users\FRANCO\Desktop\replit-backup

### OPCI√ìN B: Clonar con Git (SI TIENES GIT) 

Si tu Replit est√° conectado a GitHub/Git:

```bash
# En tu m√°quina local
cd C:\Users\FRANCO\Desktop
git clone [URL_DEL_REPO_REPLIT] replit-backup
```

================================================================================================
PARTE 2: ESTRATEGIA DE SINCRONIZACI√ìN
================================================================================================

Tienes 2 opciones seg√∫n tu situaci√≥n:

### ESTRATEGIA 1: Reemplazar Completo (Si tu c√≥digo local est√° desactualizado)

**Cu√°ndo usar**: Si tu c√≥digo local tiene muchas diferencias y conf√≠as 100% en Replit.

```bash
# 1. HACER BACKUP de tu c√≥digo local primero
cd C:\Users\FRANCO\Desktop
mkdir backup-$(date +%Y%m%d)
cp -r "OpenDoors SO" backup-$(date +%Y%m%d)/

# 2. Eliminar contenido (excepto .git si existe)
cd "OpenDoors SO"
# Elimina todo EXCEPTO .git/ si tienes control de versiones

# 3. Copiar todo desde Replit
cp -r C:\Users\FRANCO\Desktop\replit-backup/* .

# 4. Instalar dependencias
pip install -r requirements.txt

# 5. Configurar .env
cp env.example .env
# Edita .env con tus credenciales
```

### ESTRATEGIA 2: Merge Selectivo (Si tienes cambios locales que quieres conservar)

**Cu√°ndo usar**: Si tu c√≥digo local tiene modificaciones custom que quieres mantener.

**PASO 1: Identificar diferencias**

```bash
# Comparar estructuras
cd "OpenDoors SO"
ls -la src/

cd C:\Users\FRANCO\Desktop\replit-backup
ls -la src/

# Anotar qu√© archivos son diferentes
```

**PASO 2: Copiar archivos nuevos/mejorados desde Replit**

```bash
# Backend - Archivos core que DEBEN actualizarse
cp replit-backup/src/services/financial_calculator.py "OpenDoors SO/src/services/"
cp replit-backup/src/services/currency_validator.py "OpenDoors SO/src/services/"
cp replit-backup/src/models/invoice.py "OpenDoors SO/src/models/"
cp replit-backup/src/models/user.py "OpenDoors SO/src/models/"
cp replit-backup/src/models/partner.py "OpenDoors SO/src/models/"
cp replit-backup/src/core/permissions.py "OpenDoors SO/src/core/"

# Endpoints
cp replit-backup/src/api/routers/financial_reports.py "OpenDoors SO/src/api/routers/"
cp replit-backup/src/api/routers/invoices.py "OpenDoors SO/src/api/routers/"
cp replit-backup/src/api/routers/partners.py "OpenDoors SO/src/api/routers/"

# Configuraci√≥n
cp replit-backup/src/main.py "OpenDoors SO/src/"
cp replit-backup/requirements.txt "OpenDoors SO/"
```

**PASO 3: Copiar gu√≠as y configuraci√≥n**

```bash
cp replit-backup/GUIA_*.txt "OpenDoors SO/"
cp replit-backup/.cursorrules "OpenDoors SO/"
cp replit-backup/COMO_SINCRONIZAR_CON_REPLIT.txt "OpenDoors SO/"
```

================================================================================================
PARTE 3: ARCHIVOS CR√çTICOS QUE DEBES ACTUALIZAR
================================================================================================

Estos archivos contienen la l√≥gica fiscal de Joni y DEBEN ser exactos:

### PRIORIDAD M√ÅXIMA üî¥

```
‚úÖ src/services/financial_calculator.py    # L√≥gica Balance IVA y General
‚úÖ src/services/currency_validator.py      # Formato argentino
‚úÖ src/models/invoice.py                   # Estructura fiscal
‚úÖ src/core/permissions.py                 # Sistema de roles
```

### ALTA PRIORIDAD üü°

```
‚úÖ src/api/routers/financial_reports.py   # Endpoints Balance IVA/General
‚úÖ src/api/routers/invoices.py             # CRUD facturas
‚úÖ src/api/routers/partners.py             # Gesti√≥n socios
‚úÖ src/models/user.py                      # Usuarios y roles
‚úÖ src/models/partner.py                   # Socios
```

### PRIORIDAD NORMAL üü¢

```
‚úÖ src/main.py                             # App principal
‚úÖ src/core/config.py                      # Configuraci√≥n
‚úÖ src/core/database.py                    # DB setup
‚úÖ src/core/security.py                    # JWT
‚úÖ requirements.txt                        # Dependencias
```

### DOCUMENTACI√ìN üìö

```
‚úÖ GUIA_COMPLETA_REPLICACION.txt
‚úÖ GUIA_PARTE_2_ENDPOINTS_FRONTEND.txt
‚úÖ GUIA_PARTE_3_GRAFICAS_DEPLOYMENT.txt
‚úÖ GUIA_USO_CON_CURSOR_AI.txt
‚úÖ .cursorrules
```

================================================================================================
PARTE 4: VALIDAR QUE TODO FUNCIONA
================================================================================================

Despu√©s de sincronizar, ejecuta estas verificaciones:

### 1. Verificar estructura

```bash
cd "OpenDoors SO"
ls -la src/services/
# Debes ver:
# - financial_calculator.py
# - currency_validator.py

ls -la src/models/
# Debes ver:
# - invoice.py
# - user.py
# - partner.py
```

### 2. Instalar dependencias

```bash
# Crear entorno virtual (si no existe)
python -m venv venv
source venv/bin/activate  # En Windows: venv\Scripts\activate

# Instalar
pip install -r requirements.txt
```

### 3. Configurar base de datos

```bash
# Edita .env con tus credenciales PostgreSQL
DATABASE_URL=postgresql://user:password@localhost:5432/opendoors_billing

# Si usas Alembic para migraciones
alembic upgrade head
```

### 4. Probar que inicia

```bash
uvicorn src.main:app --host 0.0.0.0 --port 5000 --reload
```

Si inicia sin errores, ve a: http://localhost:5000/docs

### 5. Validar l√≥gica fiscal (CR√çTICO)

```python
# En una consola Python
from src.services.financial_calculator import FinancialCalculator
from src.models.invoice import TipoFactura

calc = FinancialCalculator()

# Test: Balance IVA debe ser solo tipo A
# [Crear facturas de prueba y validar]
```

### 6. Login de prueba

```bash
curl -X POST http://localhost:5000/api/auth/login \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "username=cortsfranco@hotmail.com&password=Ncc1701E@"

# Debes recibir un token JWT
```

================================================================================================
PARTE 5: USAR CURSOR AI SOBRE EL C√ìDIGO SINCRONIZADO
================================================================================================

Una vez sincronizado, Cursor AI puede ayudarte con mejoras:

### Prompt inicial para Cursor:

```
El c√≥digo en este proyecto est√° sincronizado con Replit (fuente de verdad).

Analiza la estructura actual y comp√°rala con:
- @.cursorrules
- @GUIA_COMPLETA_REPLICACION.txt

Verifica que estos archivos cr√≠ticos existan y est√©n correctos:
1. src/services/financial_calculator.py
2. src/services/currency_validator.py
3. src/models/invoice.py
4. src/core/permissions.py

Dame un reporte de estado.
```

### Prompt para validar l√≥gica fiscal:

```
Revisa src/services/financial_calculator.py y verifica:

1. ¬øEl m√©todo calcular_balance_iva() filtra SOLO facturas tipo A?
2. ¬øEl m√©todo calcular_balance_general() filtra SOLO movimiento_cuenta=SI?
3. ¬øExiste validar_coherencia_montos()?

Mu√©strame el c√≥digo de cada m√©todo y confirma que cumple las reglas de Joni.
```

### Prompt para implementar frontend:

```
Ahora implementemos el frontend siguiendo:
- @GUIA_PARTE_2_ENDPOINTS_FRONTEND.txt
- @GUIA_PARTE_3_GRAFICAS_DEPLOYMENT.txt

Empecemos con:
1. Setup React + Vite (secci√≥n 12.1)
2. Instalar dependencias (secci√≥n 12.2)

Hazlo paso por paso.
```

================================================================================================
PARTE 6: MANTENIMIENTO CONTINUO
================================================================================================

### Sincronizaci√≥n peri√≥dica con Replit

Si hago mejoras en Replit, puedes re-sincronizar:

1. Descarga nuevo ZIP desde Replit
2. Compara con tu c√≥digo local usando Cursor:

```
Compara estos archivos de Replit actualizado con mis archivos locales:
- [lista de archivos]

Dame un diff y recomienda qu√© actualizar.
```

### Subir cambios locales a Replit (opcional)

Si haces mejoras locales que quieres en Replit:

```bash
# Si Replit est√° conectado a Git
git add .
git commit -m "Mejoras desde entorno local"
git push origin main

# Replit auto-sincronizar√°
```

================================================================================================
PARTE 7: CHECKLIST POST-SINCRONIZACI√ìN
================================================================================================

Marca cada item al completarlo:

### Backend
‚ñ° financial_calculator.py copiado y funcional
‚ñ° currency_validator.py copiado y funcional
‚ñ° invoice.py con todos los campos fiscales
‚ñ° permissions.py con sistema de roles
‚ñ° Endpoints /api/v1/financial/* funcionan
‚ñ° Login con Franco funciona (cortsfranco@hotmail.com)
‚ñ° Base de datos conectada

### Documentaci√≥n
‚ñ° 4 gu√≠as GUIA_*.txt en ra√≠z
‚ñ° .cursorrules configurado
‚ñ° requirements.txt actualizado

### Testing
‚ñ° Servidor inicia sin errores
‚ñ° /docs muestra todos los endpoints
‚ñ° Balance IVA retorna solo tipo A
‚ñ° Balance General retorna solo mov. cuenta SI
‚ñ° Formato moneda valida $1.234,56

### Entorno
‚ñ° .env configurado con credenciales
‚ñ° Virtual environment activo
‚ñ° Dependencias instaladas
‚ñ° PostgreSQL corriendo

================================================================================================
PARTE 8: SOLUCI√ìN DE PROBLEMAS COMUNES
================================================================================================

### Problema: "ModuleNotFoundError: No module named 'fastapi'"

```bash
# Aseg√∫rate que el virtual environment est√© activo
source venv/bin/activate  # Linux/Mac
venv\Scripts\activate     # Windows

# Reinstala dependencias
pip install -r requirements.txt
```

### Problema: "Connection refused" al conectar PostgreSQL

```bash
# Verifica que PostgreSQL est√© corriendo
# Windows:
services.msc  # Busca "PostgreSQL" y inicia

# Verifica credenciales en .env
DATABASE_URL=postgresql://USER:PASSWORD@localhost:5432/DB_NAME
```

### Problema: "401 Unauthorized" al hacer login

```bash
# Verifica que el usuario exista en la DB
# Si es primera vez, crea el superadmin:

python -c "
from src.core.database import engine
from src.models.user import User
from src.core.security import get_password_hash
from sqlmodel import Session

with Session(engine) as session:
    user = User(
        email='cortsfranco@hotmail.com',
        hashed_password=get_password_hash('Ncc1701E@'),
        full_name='Franco Corts',
        role='superadmin',
        is_active=True
    )
    session.add(user)
    session.commit()
    print('Superadmin creado')
"
```

### Problema: Balance IVA incluye facturas tipo B/C

```bash
# Tu c√≥digo est√° desactualizado
# Reemplaza src/services/financial_calculator.py desde Replit
cp replit-backup/src/services/financial_calculator.py src/services/
```

### Problema: Cursor AI no encuentra las gu√≠as

```bash
# Verifica que est√©n en la ra√≠z
ls -la GUIA_*.txt

# Si no est√°n, copialas desde Replit
cp replit-backup/GUIA_*.txt .
```

================================================================================================
RESUMEN: FLUJO COMPLETO DE SINCRONIZACI√ìN
================================================================================================

1. ‚úÖ Descargar ZIP desde Replit
2. ‚úÖ Hacer backup de c√≥digo local
3. ‚úÖ Decidir estrategia (reemplazo completo vs merge selectivo)
4. ‚úÖ Copiar archivos cr√≠ticos primero (financial_calculator, invoice, etc.)
5. ‚úÖ Copiar gu√≠as y .cursorrules
6. ‚úÖ Instalar dependencias
7. ‚úÖ Configurar .env
8. ‚úÖ Probar que inicia
9. ‚úÖ Validar l√≥gica fiscal
10. ‚úÖ Usar Cursor AI para mejoras adicionales

================================================================================================

Con estos pasos, tu c√≥digo local estar√° 100% sincronizado con Replit y podr√°s 
trabajar con Cursor AI usando las gu√≠as como referencia.

¬øDudas? Revisa la secci√≥n de "Soluci√≥n de problemas comunes" o preg√∫ntame.
